name: 2 - release 

on:
  workflow_dispatch:
  workflow_call:
  push:
    tags:
      - "v*"

jobs:

  check-secret:
    runs-on: ubuntu-latest
    outputs:
      test-pypi-api-token: ${{ steps.test-pypi-token.outputs.defined }}
      pypi-api-token: ${{ steps.pypi-token.outputs.defined }}
    steps:
        - id: test-pypi-token
          if: "${{ env.TEST_PYPI_API_TOKEN != '' }}"
          run: echo "::set-output name=defined::true"
          env:
              TEST_PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
        - id: pypi-token
          if: "${{ env.PYPI_API_TOKEN != '' }}"
          run: echo "::set-output name=defined::true"
          env:
              PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

  build:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
    - name: upload artifacts 
      uses: actions/upload-artifact@v3
      with:
        name: pymisemo-dist
        path: dist/

  release:
    name: release üêç distributions üì¶
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifact 
      uses: actions/download-artifact@v3
      with:
        name: pymisemo-dist
    - name: Test artifact 
      run: ls -R
    - name: make a github release
      id: new-release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        files: |
          *.gz
          *.whl
  publish-test-pypi:
    name: publish to test pypi
    runs-on: ubuntu-latest

    needs: [build, check-secret]
    if: needs.check-secret.outputs.test-pypi-api-token == 'true'
    steps:
      - name: Download artifact 
        uses: actions/download-artifact@v3
        with:
          name: pymisemo-dist
          path: dist
      - name: Test artifact 
        run: ls -R
      - name: Publish distribution üì¶ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  publish-pypi:
    name: publish to pypi
    runs-on: ubuntu-latest

    needs: [build, check-secret]
    if: needs.check-secret.outputs.pypi-api-token == 'true'
    steps:
      - name: Download artifact 
        uses: actions/download-artifact@v3
        with:
          name: pymisemo-dist
          path: dist
      - name: Test artifact 
        run: ls -R
      - name: Publish distribution üì¶ to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
